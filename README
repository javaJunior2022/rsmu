Общая проблема:

Нужен небольшой бэкенд-сервис, который учитывал бы результаты обучающихся в соответствии с планом учебного курса
и считал бы рейтинг обучающегося по его оценкам.

Задача:
Развернуть проект на Spring Boot с подключением к базе PostgreSQL, общение с базой через Hibernate ORM.

В базе 6 таблиц, желательно чтобы создавались сами при первом запуске:

1) Курс (уникальное название, дата начала и дата окончания, признак активности)

2) Обучающийся (фамилия, имя, отчество, номер группы, признак активности)

3) Связь обучающегося с курсом (развязочная таблица многие-к-многим)

4) Занятие (ссылка на курс, название, дата-время, максимальная оценка)

5) Оценка обучающегося за занятие (многие-к-одному: ссылка на обучающегося, ссылка на занятие, балл)

6) Рейтинг обучающегося по курсу (многие-к-одному: ссылка на обучающегося, ссылка на курс, рейтинговый балл)



С помощью возможностей Spring сделать следующие REST-API, которые получают и отдают JSON:

1) создание или обновление курса

2) создание или обновление обучающегося

3) создание или обновление занятия

4) связывание обучающегося с курсом

5) выставление или изменение оценки обучающегося за занятие

6) получение данных по студенту (курс, рейтинговый балл, зачтен ли курс)

Данные по студенту (п.6) имеют следующую структуру:

Список курсов с рейтингами и фактом зачтения курса. Рейтинг вычисляется следующим образом:

По всем занятиям курса, дата и время которыхраньше текущего , берется сумма баллов за фактические оценки
обучающегося и делятся на сумму максимальных баллов.
Полученный процент (с точностью до сотых) - и есть рейтинговый балл. Курс считается зачтенным,
если рейтинг >= 70%, а также по каждому занятию набрано не менее 70% от максимального балла.
При этом факт зачтения дисциплины выдавать даже если все занятия еще не пройдены,
т.е. факт того, что на данный момент обучающийся достойно выполняет нормативы курса.
Посчитанный рейтинг хранить в таблице 6, не пересчитывать каждый раз.